{"Name":"AndroidSwipeableCardStack","Id":3049,"Alias":"androidswipeablecardstack","Description":"\r\nAndroidSwipeableCardStack\r\n===================\r\nA tinder like swipeable card stack component. Provide \"swipe to like\" effects. Easy to customize card views.\r\n\r\nLibrary based on Android Java project https://github.com/wenchaojiang/AndroidSwipeableCardStack\r\n\r\n\r\n\r\n**Change log:**\r\n\r\n    - 1.0.0\r\nConfiguration and usage(TODO): \r\n\r\n            See demo project\r\n\r\n\r\n\r\n**TODO**\r\n\r\n- refactor to use RecycleAdapter\r\n","Version":"1.0.1","Summary":"A tinder like swipeable card stack component. Provide \"swipe to like\" effects. Easy to customize card views.","QuickStart":"Configuration\r\n-----\r\n\r\n\r\nPut CardStack in your layout file\r\n\r\n```xml\r\n     \u003cgemslibe.xamarin.droid.ui.swipecards.CardStack\r\n        android:id=\"@+id/container\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:clipChildren=\"false\"\r\n        android:clipToPadding=\"false\"\r\n        android:layout_margin=\"-15dp\" /\u003e\r\n```\r\n\r\nCreate your card view layout file.\r\n\r\nExample: card_layout.xml\r\n```xml\r\n\u003c?xml version=\"1.0\" encoding=\"utf-8\"?\u003e\r\n\u003cgemslibe.xamarin.droid.ui.swipecards.MyCard xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:card_view=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@android:color/white\"\r\n    card_view:cardCornerRadius=\"20dp\"\r\n    card_view:cardElevation=\"10dp\"\u003e\r\n    \u003cRelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\u003e\r\n        \u003cImageView\r\n            android:id=\"@+id/imgProduct\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_above=\"@+id/btnDislike\"\r\n            android:layout_alignParentLeft=\"true\"\r\n            android:layout_alignParentStart=\"true\"\r\n            android:padding=\"100dp\"\r\n            android:scaleType=\"fitCenter\"\r\n            android:src=\"@drawable/android_img_1\" /\u003e\r\n        \u003cImageButton\r\n            android:id=\"@+id/btnDislike\"\r\n            android:layout_width=\"100dp\"\r\n            android:layout_height=\"100dp\"\r\n            android:layout_alignParentLeft=\"true\"\r\n            android:layout_alignParentStart=\"true\"\r\n            android:layout_alignTop=\"@+id/btnLike\"\r\n            android:layout_marginLeft=\"50dp\"\r\n            android:layout_marginStart=\"50dp\"\r\n            android:background=\"@drawable/xamarin_icon\" /\u003e\r\n        \u003cImageButton\r\n            android:id=\"@+id/btnLike\"\r\n            android:layout_width=\"100dp\"\r\n            android:layout_height=\"100dp\"\r\n            android:layout_alignParentBottom=\"true\"\r\n            android:layout_alignParentEnd=\"true\"\r\n            android:layout_alignParentRight=\"true\"\r\n            android:layout_marginBottom=\"50dp\"\r\n            android:layout_marginEnd=\"50dp\"\r\n            android:layout_marginRight=\"50dp\"\r\n            android:background=\"@drawable/xamarin_icon\" /\u003e\r\n    \u003c/RelativeLayout\u003e\r\n\u003c/gemslibe.xamarin.droid.ui.swipecards.MyCard\u003e\r\n```\r\n\r\nExtend and implement your own adapter for the card stack. The CardStack will accept ArrayAdapter.\r\nThe Following example extends a simple ArrayAdapter\u003cString\u003e, overriding ```GetView()``` and ```BindView()``` to supply your customized card layout\r\n\r\n```cs\r\n public class CardsAdapter : CardStackAdapter\r\n    {\r\n        public override View GetView(int position, View convertView, ViewGroup parent)\r\n        {\r\n            var view = ((MyCard)convertView);\r\n            var btnLike = convertView.FindViewById\u003cImageButton\u003e(Resource.Id.btnLike);\r\n            var btnDislike = convertView.FindViewById\u003cImageButton\u003e(Resource.Id.btnDislike);\r\n            btnLike.Click += (sender, args) =\u003e { OnTapButtonsEvent?.Invoke(\"like\"); };\r\n\r\n            btnDislike.Click += (sender, args) =\u003e { OnTapButtonsEvent?.Invoke(\"dislike\"); };\r\n\r\n            view.OnCardSwipeActionEvent += action =\u003e { OnCardSwipeActionEvent?.Invoke(action); };\r\n\r\n            return convertView;\r\n        }\r\n\r\n        public event Action\u003cstring\u003e OnTapButtonsEvent;\r\n        public event Action\u003cstring\u003e OnCardSwipeActionEvent;\r\n\r\n        public override void BindView(int position, View convertView, ViewGroup parent)\r\n        {\r\n            var cm = (CardModel)GetItem(position);\r\n            var imgProduct = convertView.FindViewById\u003cImageView\u003e(Resource.Id.imgProduct);\r\n\r\n            imgProduct.SetImageResource(cm.ImgResId);\r\n        }\r\n    }\r\n```\r\nCreate your card model class\r\n```cs\r\n\t public class CardModel\r\n    {\r\n        public int ImgResId { get; set; }\r\n    }\r\n```\r\nGet the CardStack instance in your activity and set the adapter\r\n\r\n```cs\r\n\tprivate CardStack _cardStack;\r\n\r\n        protected override void OnCreate(Bundle bundle)\r\n        {\r\n            base.OnCreate(bundle);\r\n\r\n\r\n            SetContentView(Resource.Layout.activity_main);\r\n\r\n            _cardStack = FindViewById\u003cCardStack\u003e(Resource.Id.container);\r\n            _cardStack.ContentResource = Resource.Layout.card;\r\n            //you can adjust swipe behaviour with your custom swipe listener\r\n            _cardStack.CardEventListener = new MyCard.CardSwipeListener(Dp2Px(this, 100), _cardStack);\r\n            //cardStack.setStackMargin(20);\r\n            var cardAdapter = new CardsAdapter(ApplicationContext, Resource.Layout.card);\r\n            cardAdapter.Add(new CardModel {ImgResId = Resource.Drawable.android_img_1});\r\n            cardAdapter.Add(new CardModel {ImgResId = Resource.Drawable.android_img_2});\r\n            cardAdapter.Add(new CardModel {ImgResId = Resource.Drawable.android_img_3});\r\n            cardAdapter.Add(new CardModel {ImgResId = Resource.Drawable.android_img_4});\r\n            cardAdapter.Add(new CardModel {ImgResId = Resource.Drawable.android_img_5});\r\n            cardAdapter.Add(new CardModel {ImgResId = Resource.Drawable.android_img_6});\r\n            cardAdapter.Add(new CardModel {ImgResId = Resource.Drawable.android_img_7});\r\n            cardAdapter.Add(new CardModel {ImgResId = Resource.Drawable.apple_vs_android_02});\r\n\r\n            cardAdapter.OnTapButtonsEvent += OnButtonTap;\r\n            cardAdapter.OnCardSwipeActionEvent += OnCardSwipeActionEvent;\r\n\r\n            _cardStack.Adapter = cardAdapter;\r\n        }\r\n```\r\n\r\nListening to card stack event \r\n----\r\nimplement CardStack.CardEventListener, and set it as listener\r\n```cs\r\n\t_cardStack.CardEventListener = new MyCard.CardSwipeListener(Dp2Px(this, 100), _cardStack);\r\n```\r\n```cs\r\n\t internal class CardSwipeListener : CardStack.ICardEventListener\r\n        {\r\n            private readonly int _discardDistancePx;\r\n            private readonly CardStack _cardStack;\r\n\r\n            public CardSwipeListener(int discardDistancePx, CardStack cardStack)\r\n            {\r\n                _discardDistancePx = discardDistancePx;\r\n                _cardStack = cardStack;\r\n            }\r\n\r\n            public bool SwipeEnd(int section, float x1, float y1, float x2, float y2)\r\n            {\r\n                //var distance = CardUtils.Distance(x1, y1, x2, y2);\r\n                //Discard card only if user moves card to RIGHT/LEFT\r\n                var discard = Math.Abs(x2 - x1) \u003e _discardDistancePx;\r\n                var cardView = _cardStack.TopView as MyCard;\r\n                if (discard)\r\n                {\r\n                    var action = (x2 \u003c x1) ? \"dislike\" : \"like\";\r\n                    cardView.OnCardSwipeActionEvent?.Invoke(action);\r\n                }\r\n                \r\n                return discard;\r\n            }\r\n\r\n            public bool SwipeStart(int section, float x1, float y1, float x2, float y2)\r\n            {\r\n                return false;\r\n            }\r\n\r\n            public bool SwipeContinue(int section, float x1, float y1, float x2, float y2)\r\n            {\r\n                return false;\r\n            }\r\n\r\n            public void Discarded(int mIndex, int direction)\r\n            {\r\n            }\r\n\r\n            public void TopCardTapped()\r\n            {\r\n            }\r\n        }\r\n```\r\n\r\n\r\n---\r\nSee demo project","Hash":"1545b70d312d3b6bafdd9602a4d6fcc7","TargetPlatforms":["android"],"TrialHash":null}